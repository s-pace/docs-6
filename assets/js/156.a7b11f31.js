(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{2219:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"json-web-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-web-token"}},[e._v("#")]),e._v(" JSON Web Token")]),e._v(" "),s("p",[e._v("For additional security, API consumers can make use of JSON Web Tokens (JWT). This is a standard "),s("a",{attrs:{href:"https://tools.ietf.org/html/rfc7519",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 7159"),s("OutboundLink")],1),e._v(" for web authentication. JWT tokens are signed using a secret or key selected by the manager of the "),s("router-link",{attrs:{to:"/api-mgmt/api-client-mgmt.html#access-profile"}},[e._v("access profile")]),e._v(".")],1),e._v(" "),s("p",[e._v("JWT tokens are used by identity providers (for example Okta, OneLogin, Auth0) that authenticate users and provide verified access to business applications. Also known as Single-Sign On, identity providers streamline access to applications through a central authentication mechanism.")]),e._v(" "),s("p",[e._v("Also, JWT tokens can be signed to verify that the token is legitimate. This allows the recipient to validate that the contents have not been modified by anyone else, adding another layer of security.")]),e._v(" "),s("p",[e._v("This document will cover:")]),e._v(" "),s("ol",[s("li",[e._v("How Workato supports JWT Signing methods")]),e._v(" "),s("li",[e._v("How to generate a JWT token")]),e._v(" "),s("li",[e._v("Calling a Workato API endpoint with JWT token")])]),e._v(" "),s("h2",{attrs:{id:"supported-signing-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#supported-signing-methods"}},[e._v("#")]),e._v(" Supported signing methods")]),e._v(" "),s("p",[e._v("Workato supports two signing methods:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[e._v("Signing method")]),e._v(" "),s("th",[e._v("Description")])])]),e._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"#hmac-signing-method"}},[s("strong",[e._v("HMAC")])])]),e._v(" "),s("td",[e._v("HMAC uses a symmetric shared secret (client and server have the same secret). This uses a 256-bit secret value.")])]),e._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[s("a",{attrs:{href:"#rsa-signing-method"}},[s("strong",[e._v("RSA")])])]),e._v(" "),s("td",[e._v("RSA uses an asymmetric key pair (client has a private key and shares the public key with the server).")])])])]),e._v(" "),s("h2",{attrs:{id:"hmac-signing-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hmac-signing-method"}},[e._v("#")]),e._v(" HMAC signing method")]),e._v(" "),s("p",[e._v("If you select "),s("strong",[e._v("HMAC")]),e._v(", you will see the following fields in the Access Profile screen:")]),e._v(" "),s("p",[s("DocImage",{attrs:{src:a(429),alt:"JWT Token Configuration HMAC authentication",width:"610",height:"431"}}),e._v(" "),s("em",[e._v("JWT Token Configuration HMAC authentication")])],1),e._v(" "),s("h3",{attrs:{id:"how-to-generate-a-hmac-secret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-generate-a-hmac-secret"}},[e._v("#")]),e._v(" How to generate a HMAC secret")]),e._v(" "),s("p",[e._v("The shared secret can be any value that you select, but for best security, it should be a long value generated by a secure random number generator. If you have OpenSSL, you can generate such a secret with the command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("openssl rand -base64 "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("32")]),e._v("\n")])])]),s("p",[e._v("Paste the secret value into the "),s("strong",[e._v("JWT HMAC secret")]),e._v(" field.")]),e._v(" "),s("h2",{attrs:{id:"rsa-signing-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rsa-signing-method"}},[e._v("#")]),e._v(" RSA signing method")]),e._v(" "),s("p",[e._v("If you select "),s("strong",[e._v("RSA")]),e._v(", you will see the following fields in the Access Profile screen:")]),e._v(" "),s("p",[s("DocImage",{attrs:{src:a(430),alt:"JWT Token Configuration RSA authentication",width:"729",height:"502"}}),e._v(" "),s("em",[e._v("JWT Token Configuration RSA authentication")])],1),e._v(" "),s("h3",{attrs:{id:"how-to-generate-a-rsa-public-private-key-pair"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-generate-a-rsa-public-private-key-pair"}},[e._v("#")]),e._v(" How to generate a RSA public/private key pair")]),e._v(" "),s("p",[e._v("To configure a RSA authentication, you must have an RSA public key/certificate and a corresponding RSA private key. One way to generate this is by using OpenSSH:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("ssh-keygen -t rsa\n")])])]),s("p",[e._v("This will generate two files, one for the private key (no extension) and one for the public key (.pub extension). A typical public key file might look like this:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4O6vRGXTkXWQ4yjj6baC7xAlrJPagWQ1WgI7RBUfk5PRPyD88Lp1vqe0CqshOIEeIVca3mD+W0YtJGlu4IaFh2gIC0W2lQY+3yXkzw2IQvnK1jjzxLJ6Dho7Vh3kLVqlmDB0ABdFhoU+vZf19AnLMqGhmu81xXoutK89MJAfvGFWbZ/zfM/yl9aqTOVrEJFpUxloL2IY/EAiUqblRTH5KWtimetEPF8VG3hu/YeU/5/CzPGZaLKUOcO3k0A6a6iIA2ruV180QN0FmgrCUsQ6oA6vWZsY1LuJm3bnLv7KJApR+WYqp7OCMlhk67N7zxkbZqNb2+eyUCx7E2SFCjFkR jdart@bear\n")])])]),s("p",[e._v("The public key needs to be pasted into the "),s("strong",[e._v("Public Key")]),e._v(" field in the "),s("strong",[e._v("Access Profile")]),e._v(" screen.")]),e._v(" "),s("h2",{attrs:{id:"how-to-generate-jwt-tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-generate-jwt-tokens"}},[e._v("#")]),e._v(" How to generate JWT Tokens")]),e._v(" "),s("p",[e._v("A JWT token can encapsulate several pieces of information that the API requester communicates to the server. For Workato, the essential information is the Workato access key and the name of the user. These should be placed in a JSON structure similar to the following:")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"sub"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"d4aee74e131926682043395edecaf377765fae48e56e232cb295af475b314545"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"John Doe"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("Here "),s("code",[e._v("sub")]),e._v(" is a claim that denotes the principal subject (or API requester). The "),s("code",[e._v("sub")]),e._v(" value is the API key that is obtainable from the "),s("router-link",{attrs:{to:"/api-mgmt/api-client-mgmt.html#access-profile"}},[e._v("Access Profile screen")]),e._v(" in Workato. Lastly, "),s("code",[e._v("name")]),e._v(" is the name of the requester.")],1),e._v(" "),s("p",[e._v("Workato will inspect the "),s("code",[e._v("sub")]),e._v(" claim to look for a valid API key before accepting the API request. If the "),s("code",[e._v("sub")]),e._v(" claim is restricted by the identity provider and you are unable to provide the API key in this claim, you can configure custom "),s("strong",[e._v("Workato claims")]),e._v(" to store the API key. Learn more "),s("router-link",{attrs:{to:"/api-mgmt/jwt-workato-claim.html"}},[e._v("here")]),e._v(".")],1),e._v(" "),s("p",[e._v("The JWT token is a signed representation of the JSON structure. You can generate a JWT token using the tools at "),s("a",{attrs:{href:"https://jwt.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JWT.IO"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("With JWT, the API requester is responsible for generating and packaging a token in the correct format. An online tool is available at "),s("a",{attrs:{href:"https://jwt.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JWT.IO"),s("OutboundLink")],1),e._v(' to facilitate this. The JSON format text mentioned above should be pasted or typed into the "payload" field on the "Decoded" side of the tool. In addition, they will paste in the private key (RSA) or secret string (HMAC) in the "Verify Signature" section. The signed and encoded key then appears on the left-hand side in the "Encoded" section.')]),e._v(" "),s("p",[e._v("The two standard algorithms Workato supports are "),s("strong",[e._v("HS256")]),e._v(" (aka HMAC) and "),s("strong",[e._v("RS256")]),e._v(" (aka RSA).")]),e._v(" "),s("p",[e._v("For example, generation of an HMAC JWT might look like this:")]),e._v(" "),s("p",[s("DocImage",{attrs:{src:a(431),alt:"JWT Generation",width:"2402",height:"1512"}}),e._v(" "),s("em",[e._v("JWT Generation")])],1),e._v(" "),s("p",[e._v("Similarly, an identity provider will be able to issue JWT token with the API key embedded in the corresponding JWT claim. See "),s("router-link",{attrs:{to:"/api-mgmt/jwt-workato-claim.html"}},[e._v("here")]),e._v(" for more information on JWT Workato claim.")],1),e._v(" "),s("h2",{attrs:{id:"calling-an-api-endpoint-with-jwt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#calling-an-api-endpoint-with-jwt"}},[e._v("#")]),e._v(" Calling an API endpoint with JWT")]),e._v(" "),s("p",[e._v("The encoded and signed token is passed to the Workato API in the header (see "),s("router-link",{attrs:{to:"/api-mgmt/calling-apis.html"}},[e._v("Calling APIs")]),e._v("). The access token is sent in the Authorization header with the Bearer authentication scheme.")],1),e._v(" "),s("ol",[s("li",[s("p",[e._v("The example below shows how the token is used in Postman:\n"),s("DocImage",{attrs:{src:a(432),alt:"Postman test",width:"1606",height:"390"}}),e._v(" "),s("em",[e._v("Example of a JWT token used in Postman")])],1)]),e._v(" "),s("li",[s("p",[e._v("The example below shows how the token is used in a curl request:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -XGET "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n-H "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Authorization: Bearer ayJhbGciOiJIUzI1NakIKjkJFVCJ9.eyJzdWIiOiI4OJSIFMLLdkZTY0ZWZkNDY1MTcyMjk2MDA2ZTlmNDEwNGEzOGJmMDAzZTk0YmYyYzRiMzhjYzg3ZDgwYjU0ODk1IiwibmFtZSI6os9fvaG4gRG9lIn0.D_ZHmYZkbRAFQeL'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'https://apim.workato.com/api-endpoints-v1/call?email=john-doe%40acme.com'")]),e._v("\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports},429:function(e,t,a){e.exports=a.p+"assets/img/jwt-token-config-hmac.5f54574f.png"},430:function(e,t,a){e.exports=a.p+"assets/img/jwt-token-config-rsa.46d1c08d.png"},431:function(e,t,a){e.exports=a.p+"assets/img/jwt-generation.4ab998f0.png"},432:function(e,t,a){e.exports=a.p+"assets/img/postman-eg.0fcaf3f2.png"}}]);